#!/usr/bin/python
# merges a couple of files into a single hosts file
#
# Author: Thomas Delrue

import argparse
import os.path
import random
import sys
import time

VERBOSITY_ERR = 1
VERBOSITY_WARN = 2
VERBOSITY_INFO = 3
VERBOSITY_VERBOSE = 4

parser = argparse.ArgumentParser(description="MergeHosts merges a hosts file with local, hard-coded and untrusted hosts")
parser.add_argument("-v", "--verbose", help="Defines the verbosity level", action="count", default=0)
parser.add_argument("-l", "--local", help="Local hosts file containing one hostname per line (default value=local.hosts)", default="local.hosts", dest="local_hosts")
parser.add_argument("-u", "--untrusted", help="Untrusted hosts file containing one hostname per line (default value=untrusted.hosts)", default="untrusted.hosts", dest="untrusted_hosts")
parser.add_argument("-hc", "--hard", help="Hard coded hosts file formatted as <ip> <hostname> (default value=hardcoded.hosts)", default="hardcoded.hosts", dest="hard_coded")
parser.add_argument('--version', action='version', version='%(prog)s 0.1')
args = parser.parse_args()

def print_argument_values():
    if args.verbose >= VERBOSITY_VERBOSE:
        print "args.verbose = [", args.verbose, "]"
        print "args.local_hosts = [", args.local_hosts, "]"
        print "args.untrusted_hosts = [", args.untrusted_hosts, "]"
        print "args.hard_coded = [", args.hard_coded, "]"

def get_temp_file():
    result = "/tmp/mergehosts" + str(time.time()).replace('.', '')
    if args.verbose >= VERBOSITY_INFO:
        print "Temporary hosts file: " + result

    return result

def append_local_hosts(target):
    if args.verbose >= VERBOSITY_INFO:
        print "Adding Local Hosts..."
    print "# Local hosts" >> target

def append_hardcoded_hosts(target):
    if args.verbose >= VERBOSITY_INFO:
        print "Adding Hardcoded Hosts..."
    print "# Hard coded hosts" >> target

def append_untrusted_hosts(target):
    if args.verbose >= VERBOSITY_INFO:
        print "Adding Untrusted Hosts..."
    print "# Untrusted hosts" >> target

def append_external_hosts(target):
    if args.verbose >= VERBOSITY_INFO:
        print "Adding External Hosts..."
    print "# External hosts" >> target

def main():
    print_argument_values()
    tmpFile = get_temp_file()

    # the file is built up in the order:
    # 1. local
    # 2. hard_coded
    # 3. untrusted
    # 4. external
    print "# Hosts file generated by MergeHosts" >> tmpFile
    append_local_hosts(tmpFile)
    append_hardcoded_hosts(tmpFile)
    append_untrusted_hosts(tmpFile)
    append_external_hosts(tmpFile)

main()
